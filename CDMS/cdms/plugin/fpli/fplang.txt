FP


Looks like CDMS needs Linked Lists.


Vectors - Homogeneous Lists

So the type of a Vector is

data Vector t = [] | t : (Vector t)

if we use [] as a built in value constructor and declare v = [1,2,3,4], this is the same as v = 1:2:3:4:[].

we can then declare the tail function

tail :: [t] -> [t]



Vectors




Structures - Tuples, Lists

data Structured t1, t2 = (t1,t2)



Two built in functions cv and cb.

They are both for the purpose of importing Java code.  
cv stands for "create value" and creates a value instance from a Java class.  The class must have a default constructor.  
cb stands for "create bean" and creates a bean from an instance of a Java class.  Again the class must have a default constructor.

The difference between the two is that cv must be given the name of a class which extends Value.  Whereas cb does not.  It creates a Bean Value with the named class instance inside.


Syntax

program ::= exp

exp ::= ident | integer | double | string | () | true | false | nil |
        ( exp ) | unopr exp | exp binopr exp |
        if exp then exp else exp |
        lambda param . exp | exp exp |
        let decs in exp

# Note the spaces in "lambda param . exp".  The dot must not be joined to param.

decs   ::= dec , decs | dec
dec    ::= ident = exp

param  ::= () | ident

unopr  ::= hd | tl | null | ! | len | not | - |
binopr ::= and | or | = | <> | < | <= | > | >= | + | - | * | / | :

priorities:   : ++              1  cons list (right associative)
              or                2
              and               3
              = <> < <= > >=    4  scalars only
              + -               5  (binary -)
              * /               6
              application       7  {left associative, f x y == (f(x))(y)}
              - hd tl null not  8  (unary -)



Type Constructors

Bean               Beans are not currently supported.

Function           t1 -> t2 

Model

String             String

Scalar             Scalar(LWB=?,UPB=?)
  Discrete           Discrete(LWB=?)
  Continuous         Continuous(LWB=?,UPB=?)

Structured         (t1,t2,t3,...,tn)

Union              t1 | t2 | t3 | ... | t4 

Vector             [t]

Function           t1 -> t2 



Declaring Types

type String
